@model IPagedList<Damage>

@using PagedList
@using PagedList.Mvc
@using DigitalTVBilling.Helpers
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Page.Title = "დაზიანებები";

    var perms = ((Dictionary<string, bool>)Session["UserPermissions"]);
    ViewBag.AddOrder = Utils.GetPermission("ORDER_ADD");
    ViewBag.DamageStatusesAdd = Utils.GetPermission("ORDER_STATUSES_ADD");
    ViewBag.OrderMontagesSeniors = Utils.GetPermission("ORDER_MONTAGES_SENIORS");
    ViewBag.AbonentAddFromOrder = Utils.GetPermission("ABONENT_ADD_FROM_ORDER");
    ViewBag.ApproveDamage = Utils.GetPermission("DAMAGE_APPROVE");
    var user_id = ViewBag.selectedUserFilter;
    List<User> execUsers = ViewBag.ExecutorUsers;
    List<User> operatorUsers = ViewBag.OperatorUsers;
    List<Customer> _custumers = ViewBag.Custumers;
    List<OperatorGroupUser> group = ViewBag.GroupUser;
    List<Damage> DamageUSer = ViewBag.DamageUser;
    var count = Model.Count() + 1;

}

@section head {
    <script type="text/javascript" src="/Static/Scripts/bootstrap-datepicker.js"></script>
    <script type="text/javascript" src="/Static/Scripts/bootstrap-datepicker.ka.js"></script>
    <script type="text/javascript" src="/Static/Scripts/fina.datepickers.js"></script>
    <script type="text/javascript" src="/Static/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    @*<script type="text/javascript" src="~/Static/Scripts/View/damage.js"></script>*@
    <link rel="stylesheet" type="text/css" href="~/Static/Styles/datepicker3.css" />

}
@*<div class="modal fade" id="subscr_list_modal">*@
<style type="text/css">
    .bootstrap-select.btn-group.show-tick .dropdown-menu li a span.text {
        margin-right: -40px;
    }

    .bootstrap-select.form-control:not([class*=col-]) {
        width: 70%;
    }
    /* table and column width, table max height, alignments */
    /*div.scroll {
                width: 50%;
            }*/
    .textbox {
        border: 1px solid #c4c4c4;
        height: 30px;
        width: 70px;
        font-size: 13px;
        padding: 4px 4px 4px 4px;
        border-radius: 4px;
        -moz-border-radius: 4px;
        -webkit-border-radius: 4px;
        box-shadow: 0px 0px 8px #d9d9d9;
        -moz-box-shadow: 0px 0px 8px #d9d9d9;
        -webkit-box-shadow: 0px 0px 8px #d9d9d9;
    }

        .textbox:focus {
            outline: none;
            border: 1px solid #7bc1f7;
            box-shadow: 0px 0px 8px #7bc1f7;
            -moz-box-shadow: 0px 0px 8px #7bc1f7;
            -webkit-box-shadow: 0px 0px 8px #7bc1f7;
        }

    .forPass {
        background-color: lightgray;
    }

    .passed {
        background-color: #a4ff7e;
    }

    .passedWithError {
        background-color: #fce14b;
    }

    .problem {
        background-color: #e82966;
    }

    .called {
        background-color: #1FF0FF;
    }

    /*table tr:hover {
                background-color: #c4ffab;
            }*/
    table tr, th {
        text-align: center;
    }
</style>
@*<div class="modal-dialog modal-lg">
    <div class="modal-content" style="width:1400px; margin-left:-140px;">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title"></h4>
        </div>
        <div class="modal-body scroll">
            <div class="row">

            </div>
            <div class="row">
                <div class="col-md-3">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">დახურვა</button>
                </div>
                <div class="col-md-3">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">დასრულება</button>
                </div>
                <div class="col-md-3">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">პროცესი</button>
                </div>
                <div class="col-md-3">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">დამ.სხვ.მიერ.შეს</button>
                </div>
            </div>
            <div class="row" id="modal_bort">*@
<div class="col-md-12" style="overflow:auto; height:650px;">

    <table class="table table-bordered" style="overflow-y:auto;">
        <thead>
            <tr>
                <th style="width:3%;">
                    №
                </th>
                <th style="width:12%;">
                    თარიღი
                </th>
                <th style="width:15%;">
                    აბონენტი
                </th>
                <th style="width:10%;">
                    ქალაქი
                </th>
                <th style="width:5%;">
                    საკონტაქტო
                </th>
                <th style="width:5%;">
                    რესივ. რაოდ.
                </th>
                <th style="width:10%;">
                    სტატუსი
                </th>
                <th style="width: 10%;">
                    მომხმარებლები
                </th>
                <th style="width: 10%;">
                    შენიშვნა
                </th>
                <th style="width: 10%;">
                    ჯგუფი
                </th>
                <th style="width: 10%;">
                    კომენტარი
                </th>
                @*<th style="width: 5%;">
            დად.
        </th>
        <th style="width:5%; text-align:center;">
            <button type="button" class="btn btn-default btn-xs" id="btn_send_sms"><span class="glyphicon glyphicon-send" aria-hidden="true"></span></button>
            <input type="checkbox" id="check_all">
        </th>*@
            </tr>
        </thead>
        <tbody id="damages_body">
            @foreach ( Damage damage in Model)
            {
                count--;
                string classname = "";
                string class_proces = "instalatorstatus";
                string is_closed = "success__";
                //if (damage.Status == DamageStatus.Canceled)
                //{
                //    is_canceled = "canceledOerders";
                //}

                switch (damage.Status)
                {
                    case DamageStatus.loading:
                        classname = "loading";
                        break;
                    case DamageStatus.CardProblem:

                        break;
                    case DamageStatus.TVTransfer:

                        break;
                    case DamageStatus.SenderProblem:

                        break;
                    case DamageStatus.FactoryDefects:

                        break;
                    case DamageStatus.ProgramNew:

                        break;
                    case DamageStatus.AntenProblem:

                        break;
                    case DamageStatus.Closed:
                        break;
                    case DamageStatus.OtherReason:

                        break;
                    case DamageStatus.NoSignal:

                        break;
                    case DamageStatus.ImprovedInstallerDidNot:

                        break;
                    case DamageStatus.Processing:
                        classname = "processing";
                        break;
                    case DamageStatus.Processd:
                        classname = "instalatorstatus";
                        break;
                    default:
                        break;
                }

                { ViewBag.Data = Newtonsoft.Json.JsonConvert.DeserializeObject<Abonent>(damage.Data); }
                //if (damage.Group_User!=null)
                //{ ViewBag.User = Newtonsoft.Json.JsonConvert.DeserializeObject<Abonent>(damage.Group_User); }
                <tr data-code="@damage.Code" data-id="@damage.Id" data-status="@damage.Status" class="@if (damage.MontageStatus == true && damage.Status != DamageStatus.Closed)
                                                        {@class_proces}
                                                        else {
                                                            if (damage.Status == DamageStatus.Closed)
                                                            {
                                                            @is_closed
                                                            }
                                                            else {

                                                                    @classname
                                                                 }
                                                        } @*@is_canceled*@">
                    <td>@count</td>
                    <td>
                        @Html.SetDateDisplay(damage.Tdate)
                        <br />
                        <small>@Html.SetDateDisplay(damage.GetDate)</small>
                        <br />
                        <small>@Html.SetDateDisplay(damage.ChangeDate)</small>
                    </td>
                    <td>
                        @damage.Name.Split('/')[0]
                        <br />
                        <small>@damage.Code</small>
                    </td>
                    <td>
                        @ViewBag.Data.Customer.City
                        <br />
                        @if (!string.IsNullOrEmpty(ViewBag.Data.Customer.District))
                        {
                            @ViewBag.Data.Customer.District
                            <br />
                        }
                        <small>@ViewBag.Data.Customer.Address</small>
                        <br />
                        <small>@ViewBag.Data.Customer.Village</small>
                    </td>
                    <td>
                        @ViewBag.Data.Customer.Phone1
                        <br />
                        <small>@ViewBag.Data.Customer.Phone2</small>
                    </td>
                    <td>@damage.ReceiversCount</td>
                    <td class="_status">
                        @Utils.GetEnumDescription(damage.Status)
                        <br />
                        <small>

                            @if (damage.ExecutorID != 0)
                            {
                                var nm = execUsers.Where(e => e.Id == damage.ExecutorID).FirstOrDefault();
                                if (nm != null)
                                {
                                    <label>
                                        @nm.Name
                                    </label>
                                }
                            }

                        </small>
                    </td>
                    <td>
                        @if (damage.UserUser != null)
                        {
                            @damage.UserUser.Name;
                        }
                        <br />
                        @foreach (var item in group.Where(c => c.d_id == damage.Id).ToList())
                        {
                            <small>@item.name</small>
                            <br />
                        }
                        @*<small>@damage.ChangerUser</small>
                            <br />*@
                        <small>@damage.ApproveUser</small>
                    </td>
                    <td>
                        @*@Html.Raw(String.Join("<br />", @order.OrderReasons.Select(r=>r.Reason.Name)))*@
                        @ViewBag.Data.Customer.Desc
                    </td>
                    <td id="executor_wrapper_@damage.Id">
                        @{
                            var user_name = _custumers.Where(e => e.Code == damage.Code).Select(s => s.UserId).FirstOrDefault();
                            var bort_name = DamageUSer.Where(c => c.Code == damage.Code).OrderBy(cs => cs.ChangeDate).Select(s => s).ToList(); //Model.Where(c => c.Code == damage.Code).OrderBy(c => c.ChangeDate).Select(s => s.ExecutorID).ToList();
                            <label>
                                @execUsers.Where(e => e.Id == user_name).Select(s => s.Name).FirstOrDefault()
                            </label>
                            <br />
                            foreach (var item in bort_name)
                            {
                                <label>
                                    @execUsers.Where(e => e.Id == item.ExecutorID).Select(s => s.Name).FirstOrDefault()
                                </label>
                                <br />
                            }
                        }
                        @*@if (damage.ExecutorID != 0)
                            {

                                var nm = execUsers.Where(e => e.Id == damage.ExecutorID).FirstOrDefault();
                                if (nm != null)
                                {
                                    <label>

                                        @nm.Name
                                    </label>
                                }



                            }*@
                    </td>
                    <td>@damage.comment</td>
                    @*<td>
                            @if (damage.IsApproved)
                            {
                                <span class="bg-success">დად.</span>
                            }
                            else
                            {
                                if (!ViewBag.ApproveDamage)
                                {
                                    <span class="glyphicon glyphicon-minus"></span>
                                }
                                else
                                {
                                    <button class="btn btn-default btn-xs" type="button" onclick="damageApprove(@damage.Id)"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span></button>
                                }
                            }
                        </td>
                        <td style="text-align:center;">
                            <input type="checkbox" value="@damage.Id">
                        </td>*@
                </tr>
            }
            @if (Model.Count == 0)
            {
                <tr>
                    <td colspan="12" style="text-align: center;">სია ცარიელია</td>
                </tr>
            }
        </tbody>
    </table>
    @*@Html.Partial("~/Views/Abonent/_CardLogsList.cshtml", @Model.CardLogs)*@
    @*</div>
            </section>
        </div>*@
    @*@{Html.RenderPartial("~/Views/Abonent/_CardInfoData.cshtml", @Model);}*@
    @*</div>*@
</div>
                @*</div>

            </div>
<div class="modal-footer">
    <button type="button" class="btn btn-danger" data-dismiss="modal">დახურვა</button>*@
    @*<button type="button" id="save" class="btn btn-success" disabled>შენახვა</button>*@

@*</div>
        </div>
    </div>
</div>*@
